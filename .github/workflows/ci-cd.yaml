on:
  push:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker build -t simple-backend:${{ github.sha }} .
        docker tag simple-backend:${{ github.sha }} 043309363240.dkr.ecr.us-east-1.amazonaws.com/simple-backend:${{ github.sha }}

    - name: Login to ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Push to ECR
      run: |
        docker push 043309363240.dkr.ecr.us-east-1.amazonaws.com/simple-backend:${{ github.sha }}

    - name: ArgoCD Sync (optional)
      run: |
        argocd app sync simple-backend


name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      IMAGE_NAME: simple-backend

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3️⃣ Login to AWS ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ secrets.AWS_REGION }}

      # 4️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:latest .

      # 5️⃣ Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REGISTRY/$IMAGE_NAME:latest

      # 6️⃣ Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3

      # 7️⃣ Deploy to Kubernetes via Helm
      - name: Helm upgrade/install
        run: |
          helm upgrade --install $IMAGE_NAME ./simple-backend \
            --set image.repository=$ECR_REGISTRY/$IMAGE_NAME \
            --set image.tag=latest

